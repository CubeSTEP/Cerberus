
// ======================================================================
// \title  SATMode.h
// \author Auto-generated by STARS
// \brief  header file for state machine SATMode
//
// ======================================================================
           
#ifndef SATMODE_H_
#define SATMODE_H_
                                
#include <Fw/Sm/SmSignalBuffer.hpp>
#include <config/FpConfig.hpp>

#include "SATState.hpp"
                                 
namespace Manager {

class SATMode_Interface {
  public:
    enum SATMode_Signals {
      STARTUPCOMPLETE_SIG,
      SAFEEXIT_SIG,
      STARTEXPERIMENT_SIG,
      ERRORDETECTED_SIG,
      TICK_SIG,
      ENDEXPERIMENT_SIG,
    };

                                 
    virtual void SATMode_Startup(const FwEnumStoreType stateMachineId) = 0;
                                 
                                 
    virtual void SATMode_SafeCheck(const FwEnumStoreType stateMachineId) = 0;
                                 
                                 
    virtual void SATMode_SafeExit(const FwEnumStoreType stateMachineId) = 0;
                                 
                                 
    virtual void SATMode_SetUpExperiment(const FwEnumStoreType stateMachineId) = 0;
                                 
                                 
    virtual void SATMode_CheckSafety(const FwEnumStoreType stateMachineId) = 0;
                                 
                                 
    virtual void SATMode_TearDownExperiment(const FwEnumStoreType stateMachineId) = 0;
                                 
                                 
    virtual void SATMode_PerformExperiment(const FwEnumStoreType stateMachineId) = 0;
                                 
                                                                  
};

class SATMode {
                                 
  private:
    SATMode_Interface *parent;
                                 
  public:
                                 
    SATMode(SATMode_Interface* parent) : parent(parent) {}
    
    enum SATState state;

    void init(const FwEnumStoreType stateMachineId);
    void update(
        const FwEnumStoreType stateMachineId, 
        const SATMode_Interface::SATMode_Signals signal, 
        const Fw::SmSignalBuffer &data
    );
};

}

#endif
