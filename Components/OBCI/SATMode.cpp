
// ======================================================================
// \title  SATMode.cpp
// \author Auto-generated by STARS
// \brief  cpp file for state machine SATMode
//
// ======================================================================            
    
#include <Fw/Types/Assert.hpp>
#include "SATMode.hpp"


void Manager::SATMode::init(const FwEnumStoreType stateMachineId)
{
    parent->SATMode_Startup(stateMachineId);
    this->state = StartUp;

}


void Manager::SATMode::update(
    const FwEnumStoreType stateMachineId, 
    const SATMode_Interface::SATMode_Signals signal, 
    const Fw::SmSignalBuffer &data
)
{
    switch (this->state) {
    
            /**
            * state StartUp
            */
            case StartUp:
            
            switch (signal) {

                case SATMode_Interface::SATMode_Signals::STARTUPCOMPLETE_SIG:
                        parent->SATMode_SafeCheck(stateMachineId);
                        this->state = Safe;

                    break;
    
                default:
                    break;
            }
            break;
    
            /**
            * state Safe
            */
            case Safe:
            
            switch (signal) {

                case SATMode_Interface::SATMode_Signals::SAFEEXIT_SIG:
                        parent->SATMode_SafeExit(stateMachineId);
                        this->state = Idle;

                    break;
    
                default:
                    break;
            }
            break;
    
            /**
            * state Idle
            */
            case Idle:
            
            switch (signal) {

                case SATMode_Interface::SATMode_Signals::STARTEXPERIMENT_SIG:
                        parent->SATMode_SetUpExperiment(stateMachineId);
                        this->state = Experiment;

                    break;
    
                case SATMode_Interface::SATMode_Signals::ERRORDETECTED_SIG:
                        this->state = Safe;

                    break;
    
                case SATMode_Interface::SATMode_Signals::TICK_SIG:
                        parent->SATMode_CheckSafety(stateMachineId);

                    break;
    
                default:
                    break;
            }
            break;
    
            /**
            * state Experiment
            */
            case Experiment:
            
            switch (signal) {

                case SATMode_Interface::SATMode_Signals::ENDEXPERIMENT_SIG:
                        parent->SATMode_TearDownExperiment(stateMachineId);
                        this->state = Idle;

                    break;
    
                case SATMode_Interface::SATMode_Signals::TICK_SIG:
                        parent->SATMode_PerformExperiment(stateMachineId);

                    break;
    
                case SATMode_Interface::SATMode_Signals::ERRORDETECTED_SIG:
                        this->state = Safe;

                    break;
    
                default:
                    break;
            }
            break;
    
        default:
        FW_ASSERT(0);
    }
}
